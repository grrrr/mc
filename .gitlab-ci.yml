stages:
  - package
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

package_pd_deken:
  stage: package
  tags:
    - docker
    - default
  image: $CI_REGISTRY/docker/pd_max
  script:
    - mkdir -p build/$CI_PROJECT_NAME
    - cp -r ex readme.md license.txt $CI_PROJECT_DIR/*.pd build/$CI_PROJECT_NAME || true
    - DEKEN_ROOT=yes deken package build/$CI_PROJECT_NAME --version `cat version.txt`
  artifacts:
    paths:
      - $CI_PROJECT_DIR/$CI_PROJECT_NAME*.dek*
    expire_in: 24h

push_github:
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  image: $CI_REGISTRY/docker/push_github
  tags:
    - docker
    - default
  script:
    - echo "Pushing to github"

upload_deken:
  stage: deploy
  only:
    - tags
  except:
    - branches
  image: $CI_REGISTRY/docker/pd_max
  tags:
    - docker
    - default
  dependencies:
    - package_pd_deken
  script:
    - DEKEN_ROOT=yes deken upload --no-source-error $CI_PROJECT_DIR/$CI_PROJECT_NAME*.dek

upload_owncloud:
  stage: deploy
  image: $CI_REGISTRY/docker/nc_transfer
  tags:
    - docker
    - default
  dependencies:
    - package_pd_deken
  script:
    - upload "$NC_FILES/$NC_USER/Documents/pdmax_packages/" "$NC_USER" "$NC_PW" "$CI_PROJECT_DIR"/*.zip "$CI_PROJECT_DIR"/*.dek
