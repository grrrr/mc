#N canvas 25 29 606 608 12;
#X obj 33 50 inlet~;
#X obj 31 251 bang~;
#X obj 31 532 outlet;
#X text 28 554 id channels;
#X obj 31 433 t a f;
#X text 101 50 Incoming signal;
#X text 113 82 specific signature (id-in chns-in chk1 chk2);
#X text 101 68 - mc multi-signal: each vector carries four floats of
;
#X text 100 98 - generic signal: if signature format is not fullfilled
;
#X text 44 138 1) Capture incoming signal to array;
#X text 29 230 2) Evaluate signal vector data at each dsp tick;
#N canvas 292 119 475 258 change 0;
#X obj 31 41 inlet;
#X obj 71 108 unpack f f f f;
#X obj 178 108 unpack f f f f;
#X obj 70 152 expr ($f1!=$f2)||($f3!=$f4)||($f5!=$f6)||($f7!=$f8);
#X obj 31 68 t a a a, f 26;
#X obj 31 192 spigot;
#X obj 31 221 outlet;
#X text 29 13 Let list of 4 floats pass if is different than the previous
;
#X connect 0 0 4 0;
#X connect 1 0 3 1;
#X connect 1 1 3 3;
#X connect 1 2 3 5;
#X connect 1 3 3 7;
#X connect 2 0 3 0;
#X connect 2 1 3 2;
#X connect 2 2 3 4;
#X connect 2 3 3 6;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 4 1 1 0;
#X connect 4 2 2 0;
#X connect 5 0 6 0;
#X restore 31 325 pd change;
#N canvas 78 61 547 329 chk-signature 0;
#X obj 42 50 inlet;
#X obj 42 264 outlet;
#X obj 357 56 inlet;
#X obj 410 56 inlet;
#X obj 42 225 spigot;
#X obj 118 225 spigot;
#X obj 105 147 expr (int($f1)==$f1)&&(int($f2)==$f2)&&($f3==$f5)&&($f4==$f6)
;
#X obj 105 114 unpack f f f f;
#X text 348 37 checksum numbers;
#X text 41 10 Check integrity of signature against given checksum numbers
;
#X obj 154 197 == 0;
#X obj 119 263 outlet;
#X obj 42 81 t a b a;
#X connect 0 0 12 0;
#X connect 2 0 6 4;
#X connect 3 0 6 5;
#X connect 4 0 1 0;
#X connect 5 0 11 0;
#X connect 6 0 4 1;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 7 1 6 1;
#X connect 7 2 6 2;
#X connect 7 3 6 3;
#X connect 10 0 5 1;
#X connect 12 0 4 0;
#X connect 12 1 5 0;
#X connect 12 2 7 0;
#X restore 31 403 pd chk-signature;
#X obj 31 352 t a a;
#X obj 63 377 mc._signature;
#X obj 253 402 print Non-mc signal connected;
#X obj 31 508 pack f f;
#N canvas 734 144 450 300 \$0-dyn 0;
#X obj 11 3 outlet;
#X obj 50 60 receive 1118-mc-msg;
#X connect 1 0 0 0;
#X restore 256 275 pd \$0-dyn;
#N canvas 584 40 592 285 gen 0;
#X text 149 112 erase;
#X obj 49 48 inlet;
#X msg 139 135 vis 1 \, editmode 1 \, mouse 0 30 0 0 \, mouseup 10000
10000 0 \, cut \, editmode 0 \, vis 0;
#X obj 140 49 inlet;
#X text 139 29 reset;
#X text 47 26 id;
#X obj 76 247 s pd-\$0-dyn;
#X msg 49 196 obj 50 60 receive \$1-mc-msg \, connect 1 0 0 0 \, dirty
0;
#X obj 49 111 t f b;
#X obj 49 83 change;
#X connect 1 0 9 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 8 1 2 0;
#X connect 9 0 8 0;
#X restore 285 486 pd gen;
#X obj 337 489 bng 15 250 50 0 empty empty reset 17 7 0 10 -261234
-1 -1;
#X text 255 255 or received message from upstream object;
#X obj 2 2 cnv 15 600 20 empty empty empty 3 8 0 12 -233017 -66577
0;
#X text 11 3 (c)grrrr.org \, gpl v3;
#X obj 33 163 tabsend~ \$0-in;
#X obj 33 186 array define \$0-in 4;
#X obj 31 274 array get \$0-in 0 4;
#X text 37 487 4) Output [id channels( message;
#X text 284 465 3) Generate receiver for id;
#X connect 0 0 23 0;
#X connect 1 0 25 0;
#X connect 4 0 16 0;
#X connect 4 1 18 0;
#X connect 11 0 13 0;
#X connect 12 0 4 0;
#X connect 12 1 15 0;
#X connect 13 0 12 0;
#X connect 13 1 14 0;
#X connect 14 0 12 1;
#X connect 14 1 12 2;
#X connect 16 0 2 0;
#X connect 17 0 11 0;
#X connect 19 0 18 1;
#X connect 25 0 11 0;
